name: Build Stage
run-name: Build Stage
on:
  workflow_call:
    
jobs:

  get-workflow-credentials:
    runs-on: ubuntu-latest
    name: Get workflow credentials
    steps:
    - id: get-workflow-credentials
      name: Get workflow credentials
      run: echo "Getting workflow credentials"


  get-app-component-metadata:
    runs-on: ubuntu-latest
    name: Get App Component Metadata    
    steps:
    - id: get-app-component-metadata
      name: Get App Component Metadata
      run: echo "Get App Component Metadata"

  run-secret-scan:
    runs-on: ubuntu-latest
    name: Run secret scan    
    steps:
    - id: run-secret-scan
      name: Run secret scan
      run: echo "Run secret scan"

  emit-secret-scan-event:
    runs-on: ubuntu-latest
    name: Emit secret scan event    
    steps:
    - id: emit-secret-scan-event
      name: Emit secret scan event
      run: echo "Emit secret scan event"

  checkout:
    runs-on: ubuntu-latest
    name: Checkout
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read  # T
    steps:
    - id: checkout
      name: Checkout
      uses: pilotaccount-org/checkout@main
    - name: Install OIDC Client from Core Package
      run: npm install @actions/core@1.6.0 @actions/http-client
    - name: Get Id Token
      uses: actions/github-script@v6
      id: idtoken
      with:
        script: |
          const coredemo = require('@actions/core')
          let id_token = await coredemo.getIDToken()
          coredemo.setOutput('id_token', id_token)
    - name: Print id token
      run: echo "id token is" ${{ steps.idtoken.outputs.id_token}}

  emit-checkout-event:
    runs-on: ubuntu-latest
    name: Emit checkout event    
    steps:
    - id: emit-checkout-event
      name: Emit checkout event
      run: echo "Emit checkout event"

  get-jdk:
    runs-on: ubuntu-latest
    name: Get JDK    
    steps:
    - id: get-jdk
      name: Get JDK
      run: echo "Get JDK"


  get-gradle:
    runs-on: ubuntu-latest
    name: Get    
    steps:
    - id: get-gradle
      name: Get Gradle
      run: echo "Get Gradle"


  build:
    runs-on: ubuntu-latest
    name: Build    
    steps:
    - id: build
      name: Build
      run: echo "Build"


  emit-build-event:
    runs-on: ubuntu-latest
    name: Get    
    steps:
    - id: emit-build-event
      name: Emit build event
      run: echo "Emit build event"


  upload-artifact:
    runs-on: ubuntu-latest
    name: Upload Artifact    
    steps:
    - id: upload-artifact
      name: Upload Artifact
      run: echo "Upload Artifact"


